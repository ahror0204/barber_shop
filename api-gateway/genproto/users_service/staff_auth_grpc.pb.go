// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.6.1
// source: staff_auth.proto

package users_service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// StaffAuthServiceClient is the client API for StaffAuthService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type StaffAuthServiceClient interface {
	StaffRegister(ctx context.Context, in *StaffRegisterRequest, opts ...grpc.CallOption) (*Empty, error)
	StaffVerify(ctx context.Context, in *VerifyStaffRegisterRequest, opts ...grpc.CallOption) (*StaffAuthResponse, error)
	StaffLogin(ctx context.Context, in *StaffLoginRequest, opts ...grpc.CallOption) (*StaffAuthResponse, error)
	// rpc VerifyToken(VerifyTokenRequest) returns (AuthPayload) {}
	StaffForgotPassword(ctx context.Context, in *Email, opts ...grpc.CallOption) (*Empty, error)
	VerifyStaffForgotPassword(ctx context.Context, in *VerifyStaffRegisterRequest, opts ...grpc.CallOption) (*StaffAuthResponse, error)
	UpdateStaffPassword(ctx context.Context, in *UpdatePasswordRequest, opts ...grpc.CallOption) (*Empty, error)
}

type staffAuthServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStaffAuthServiceClient(cc grpc.ClientConnInterface) StaffAuthServiceClient {
	return &staffAuthServiceClient{cc}
}

func (c *staffAuthServiceClient) StaffRegister(ctx context.Context, in *StaffRegisterRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/protos.StaffAuthService/StaffRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staffAuthServiceClient) StaffVerify(ctx context.Context, in *VerifyStaffRegisterRequest, opts ...grpc.CallOption) (*StaffAuthResponse, error) {
	out := new(StaffAuthResponse)
	err := c.cc.Invoke(ctx, "/protos.StaffAuthService/StaffVerify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staffAuthServiceClient) StaffLogin(ctx context.Context, in *StaffLoginRequest, opts ...grpc.CallOption) (*StaffAuthResponse, error) {
	out := new(StaffAuthResponse)
	err := c.cc.Invoke(ctx, "/protos.StaffAuthService/StaffLogin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staffAuthServiceClient) StaffForgotPassword(ctx context.Context, in *Email, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/protos.StaffAuthService/StaffForgotPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staffAuthServiceClient) VerifyStaffForgotPassword(ctx context.Context, in *VerifyStaffRegisterRequest, opts ...grpc.CallOption) (*StaffAuthResponse, error) {
	out := new(StaffAuthResponse)
	err := c.cc.Invoke(ctx, "/protos.StaffAuthService/VerifyStaffForgotPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *staffAuthServiceClient) UpdateStaffPassword(ctx context.Context, in *UpdatePasswordRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/protos.StaffAuthService/UpdateStaffPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StaffAuthServiceServer is the server API for StaffAuthService service.
// All implementations must embed UnimplementedStaffAuthServiceServer
// for forward compatibility
type StaffAuthServiceServer interface {
	StaffRegister(context.Context, *StaffRegisterRequest) (*Empty, error)
	StaffVerify(context.Context, *VerifyStaffRegisterRequest) (*StaffAuthResponse, error)
	StaffLogin(context.Context, *StaffLoginRequest) (*StaffAuthResponse, error)
	// rpc VerifyToken(VerifyTokenRequest) returns (AuthPayload) {}
	StaffForgotPassword(context.Context, *Email) (*Empty, error)
	VerifyStaffForgotPassword(context.Context, *VerifyStaffRegisterRequest) (*StaffAuthResponse, error)
	UpdateStaffPassword(context.Context, *UpdatePasswordRequest) (*Empty, error)
	mustEmbedUnimplementedStaffAuthServiceServer()
}

// UnimplementedStaffAuthServiceServer must be embedded to have forward compatible implementations.
type UnimplementedStaffAuthServiceServer struct {
}

func (UnimplementedStaffAuthServiceServer) StaffRegister(context.Context, *StaffRegisterRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StaffRegister not implemented")
}
func (UnimplementedStaffAuthServiceServer) StaffVerify(context.Context, *VerifyStaffRegisterRequest) (*StaffAuthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StaffVerify not implemented")
}
func (UnimplementedStaffAuthServiceServer) StaffLogin(context.Context, *StaffLoginRequest) (*StaffAuthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StaffLogin not implemented")
}
func (UnimplementedStaffAuthServiceServer) StaffForgotPassword(context.Context, *Email) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StaffForgotPassword not implemented")
}
func (UnimplementedStaffAuthServiceServer) VerifyStaffForgotPassword(context.Context, *VerifyStaffRegisterRequest) (*StaffAuthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyStaffForgotPassword not implemented")
}
func (UnimplementedStaffAuthServiceServer) UpdateStaffPassword(context.Context, *UpdatePasswordRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateStaffPassword not implemented")
}
func (UnimplementedStaffAuthServiceServer) mustEmbedUnimplementedStaffAuthServiceServer() {}

// UnsafeStaffAuthServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to StaffAuthServiceServer will
// result in compilation errors.
type UnsafeStaffAuthServiceServer interface {
	mustEmbedUnimplementedStaffAuthServiceServer()
}

func RegisterStaffAuthServiceServer(s grpc.ServiceRegistrar, srv StaffAuthServiceServer) {
	s.RegisterService(&StaffAuthService_ServiceDesc, srv)
}

func _StaffAuthService_StaffRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StaffRegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaffAuthServiceServer).StaffRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.StaffAuthService/StaffRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaffAuthServiceServer).StaffRegister(ctx, req.(*StaffRegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaffAuthService_StaffVerify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyStaffRegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaffAuthServiceServer).StaffVerify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.StaffAuthService/StaffVerify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaffAuthServiceServer).StaffVerify(ctx, req.(*VerifyStaffRegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaffAuthService_StaffLogin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StaffLoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaffAuthServiceServer).StaffLogin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.StaffAuthService/StaffLogin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaffAuthServiceServer).StaffLogin(ctx, req.(*StaffLoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaffAuthService_StaffForgotPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Email)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaffAuthServiceServer).StaffForgotPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.StaffAuthService/StaffForgotPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaffAuthServiceServer).StaffForgotPassword(ctx, req.(*Email))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaffAuthService_VerifyStaffForgotPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyStaffRegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaffAuthServiceServer).VerifyStaffForgotPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.StaffAuthService/VerifyStaffForgotPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaffAuthServiceServer).VerifyStaffForgotPassword(ctx, req.(*VerifyStaffRegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StaffAuthService_UpdateStaffPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StaffAuthServiceServer).UpdateStaffPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.StaffAuthService/UpdateStaffPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StaffAuthServiceServer).UpdateStaffPassword(ctx, req.(*UpdatePasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// StaffAuthService_ServiceDesc is the grpc.ServiceDesc for StaffAuthService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var StaffAuthService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "protos.StaffAuthService",
	HandlerType: (*StaffAuthServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StaffRegister",
			Handler:    _StaffAuthService_StaffRegister_Handler,
		},
		{
			MethodName: "StaffVerify",
			Handler:    _StaffAuthService_StaffVerify_Handler,
		},
		{
			MethodName: "StaffLogin",
			Handler:    _StaffAuthService_StaffLogin_Handler,
		},
		{
			MethodName: "StaffForgotPassword",
			Handler:    _StaffAuthService_StaffForgotPassword_Handler,
		},
		{
			MethodName: "VerifyStaffForgotPassword",
			Handler:    _StaffAuthService_VerifyStaffForgotPassword_Handler,
		},
		{
			MethodName: "UpdateStaffPassword",
			Handler:    _StaffAuthService_UpdateStaffPassword_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "staff_auth.proto",
}
