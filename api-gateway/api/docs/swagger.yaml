basePath: /v1
definitions:
  models.AuthResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      gender:
        type: string
      id:
        type: string
      image_url:
        type: string
      last_name:
        type: string
      passward:
        type: string
      phone_number:
        type: string
      token:
        type: string
      user_name:
        type: string
    type: object
  models.CreateCustomerRespons:
    properties:
      id:
        type: string
      token:
        type: string
    type: object
  models.Customer:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      gender:
        type: string
      id:
        type: string
      image_url:
        type: string
      last_name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      updated_at:
        type: string
      user_name:
        type: string
    type: object
  models.CustomerRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      gender:
        type: string
      image_url:
        type: string
      last_name:
        type: string
      passward:
        type: string
      phone_number:
        type: string
      user_name:
        type: string
    type: object
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.ForgotPasswordRequest:
    properties:
      email:
        type: string
    type: object
  models.GetListCustomersResponse:
    properties:
      count:
        type: integer
      customers:
        items:
          $ref: '#/definitions/models.Customer'
        type: array
    type: object
  models.LogInCustomerRequest:
    properties:
      email:
        type: string
      passward:
        type: string
    type: object
  models.ResponseOK:
    properties:
      message:
        type: string
    type: object
  models.VerifyRequest:
    properties:
      code:
        type: string
      email:
        type: string
    type: object
host: localhost:9090
info:
  contact: {}
  title: Swagger for barber shop api
  version: "1.0"
paths:
  /auth/verify_forgot_password:
    post:
      consumes:
      - application/json
      description: Verify forgot password
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.VerifyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Verify forgot password
      tags:
      - auth
  /customer/create:
    post:
      consumes:
      - application/json
      description: This api for creating customer
      parameters:
      - description: Customer
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/models.CustomerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.CreateCustomerRespons'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a customer
      tags:
      - customer
  /customer/delete/{id}:
    delete:
      consumes:
      - application/json
      description: This api for deleting customer by id
      parameters:
      - description: CustomerID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete customer by id
      tags:
      - customer
  /customer/forgot_password:
    post:
      consumes:
      - application/json
      description: This api for forgot password
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.ForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: forgot password
      tags:
      - auth
  /customer/get/{id}:
    get:
      consumes:
      - application/json
      description: This api for getting customer by id
      parameters:
      - description: CustomerID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Customer'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get customer by id
      tags:
      - customer
  /customer/login:
    post:
      consumes:
      - application/json
      description: This api for login customer
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.LogInCustomerRequest'
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.AuthResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Login customer
      tags:
      - auth
  /customer/me:
    get:
      consumes:
      - application/json
      description: This api for getting customer by token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Customer'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get customer by token
      tags:
      - customer
  /customer/register:
    post:
      consumes:
      - application/json
      description: This api for registering a customer
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.CustomerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: register a customer
      tags:
      - auth
  /customer/update/{id}:
    put:
      consumes:
      - application/json
      description: This api for updating customer
      parameters:
      - description: CustomerID
        in: path
        name: id
        required: true
        type: string
      - description: Customer
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/models.CustomerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Customer'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update a customer
      tags:
      - customer
  /customer/verify:
    post:
      consumes:
      - application/json
      description: This api for verification customer
      parameters:
      - description: Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/models.VerifyRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CreateCustomerRespons'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Verify customer
      tags:
      - auth
  /customers/list:
    get:
      consumes:
      - application/json
      description: This api for getting list of customers
      parameters:
      - default: 10
        in: query
        name: limit
        required: true
        type: integer
      - default: 1
        in: query
        name: page
        required: true
        type: integer
      - in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.GetListCustomersResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: get list customers
      tags:
      - customer
  /file-upload:
    post:
      consumes:
      - application/json
      description: This API for uploading file
      parameters:
      - description: File
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseOK'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: File upload
      tags:
      - file-upload
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
